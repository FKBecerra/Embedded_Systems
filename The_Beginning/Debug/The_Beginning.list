
The_Beginning.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000120  080001ac  080001ac  000011ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002cc  080002d4  000012d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002cc  080002cc  000012d4  2**0
                  CONTENTS
  4 .ARM          00000000  080002cc  080002cc  000012d4  2**0
                  CONTENTS
  5 .preinit_array 00000000  080002cc  080002d4  000012d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002cc  080002cc  000012cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080002d0  080002d0  000012d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000012d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000012d4  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000012d4  2**0
                  CONTENTS, READONLY
 13 .debug_info   000005ec  00000000  00000000  00001304  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000185  00000000  00000000  000018f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000070  00000000  00000000  00001a78  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000046  00000000  00000000  00001ae8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001af7b  00000000  00000000  00001b2e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000cc8  00000000  00000000  0001caa9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000971d5  00000000  00000000  0001d771  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000b4946  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000000ac  00000000  00000000  000b498c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000062  00000000  00000000  000b4a38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001ac <__do_global_dtors_aux>:
 80001ac:	b510      	push	{r4, lr}
 80001ae:	4c05      	ldr	r4, [pc, #20]	@ (80001c4 <__do_global_dtors_aux+0x18>)
 80001b0:	7823      	ldrb	r3, [r4, #0]
 80001b2:	b933      	cbnz	r3, 80001c2 <__do_global_dtors_aux+0x16>
 80001b4:	4b04      	ldr	r3, [pc, #16]	@ (80001c8 <__do_global_dtors_aux+0x1c>)
 80001b6:	b113      	cbz	r3, 80001be <__do_global_dtors_aux+0x12>
 80001b8:	4804      	ldr	r0, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x20>)
 80001ba:	f3af 8000 	nop.w
 80001be:	2301      	movs	r3, #1
 80001c0:	7023      	strb	r3, [r4, #0]
 80001c2:	bd10      	pop	{r4, pc}
 80001c4:	20000000 	.word	0x20000000
 80001c8:	00000000 	.word	0x00000000
 80001cc:	080002b4 	.word	0x080002b4

080001d0 <frame_dummy>:
 80001d0:	b508      	push	{r3, lr}
 80001d2:	4b03      	ldr	r3, [pc, #12]	@ (80001e0 <frame_dummy+0x10>)
 80001d4:	b11b      	cbz	r3, 80001de <frame_dummy+0xe>
 80001d6:	4903      	ldr	r1, [pc, #12]	@ (80001e4 <frame_dummy+0x14>)
 80001d8:	4803      	ldr	r0, [pc, #12]	@ (80001e8 <frame_dummy+0x18>)
 80001da:	f3af 8000 	nop.w
 80001de:	bd08      	pop	{r3, pc}
 80001e0:	00000000 	.word	0x00000000
 80001e4:	20000004 	.word	0x20000004
 80001e8:	080002b4 	.word	0x080002b4

080001ec <main>:
 *  Created on: Feb 22, 2025
 *      Author: Francisco Becerra
 */
#include "main.h"

int main(void){
 80001ec:	b480      	push	{r7}
 80001ee:	af00      	add	r7, sp, #0

	while(1){
 80001f0:	bf00      	nop
 80001f2:	e7fd      	b.n	80001f0 <main+0x4>

080001f4 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80001f4:	b480      	push	{r7}
 80001f6:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80001f8:	4b06      	ldr	r3, [pc, #24]	@ (8000214 <SystemInit+0x20>)
 80001fa:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80001fe:	4a05      	ldr	r2, [pc, #20]	@ (8000214 <SystemInit+0x20>)
 8000200:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8000204:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000208:	bf00      	nop
 800020a:	46bd      	mov	sp, r7
 800020c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000210:	4770      	bx	lr
 8000212:	bf00      	nop
 8000214:	e000ed00 	.word	0xe000ed00

08000218 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000218:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8000250 <LoopFillZerobss+0xe>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 800021c:	f7ff ffea 	bl	80001f4 <SystemInit>
 
/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8000220:	480c      	ldr	r0, [pc, #48]	@ (8000254 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8000222:	490d      	ldr	r1, [pc, #52]	@ (8000258 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8000224:	4a0d      	ldr	r2, [pc, #52]	@ (800025c <LoopFillZerobss+0x1a>)
  movs r3, #0
 8000226:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000228:	e002      	b.n	8000230 <LoopCopyDataInit>

0800022a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800022a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800022c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800022e:	3304      	adds	r3, #4

08000230 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000230:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000232:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000234:	d3f9      	bcc.n	800022a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000236:	4a0a      	ldr	r2, [pc, #40]	@ (8000260 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8000238:	4c0a      	ldr	r4, [pc, #40]	@ (8000264 <LoopFillZerobss+0x22>)
  movs r3, #0
 800023a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800023c:	e001      	b.n	8000242 <LoopFillZerobss>

0800023e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800023e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000240:	3204      	adds	r2, #4

08000242 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000242:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000244:	d3fb      	bcc.n	800023e <FillZerobss>
  
/* Call static constructors */
    bl __libc_init_array
 8000246:	f000 f811 	bl	800026c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800024a:	f7ff ffcf 	bl	80001ec <main>
  bx  lr    
 800024e:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000250:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 8000254:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000258:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800025c:	080002d4 	.word	0x080002d4
  ldr r2, =_sbss
 8000260:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000264:	2000001c 	.word	0x2000001c

08000268 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000268:	e7fe      	b.n	8000268 <ADC_IRQHandler>
	...

0800026c <__libc_init_array>:
 800026c:	b570      	push	{r4, r5, r6, lr}
 800026e:	4d0d      	ldr	r5, [pc, #52]	@ (80002a4 <__libc_init_array+0x38>)
 8000270:	4c0d      	ldr	r4, [pc, #52]	@ (80002a8 <__libc_init_array+0x3c>)
 8000272:	1b64      	subs	r4, r4, r5
 8000274:	10a4      	asrs	r4, r4, #2
 8000276:	2600      	movs	r6, #0
 8000278:	42a6      	cmp	r6, r4
 800027a:	d109      	bne.n	8000290 <__libc_init_array+0x24>
 800027c:	4d0b      	ldr	r5, [pc, #44]	@ (80002ac <__libc_init_array+0x40>)
 800027e:	4c0c      	ldr	r4, [pc, #48]	@ (80002b0 <__libc_init_array+0x44>)
 8000280:	f000 f818 	bl	80002b4 <_init>
 8000284:	1b64      	subs	r4, r4, r5
 8000286:	10a4      	asrs	r4, r4, #2
 8000288:	2600      	movs	r6, #0
 800028a:	42a6      	cmp	r6, r4
 800028c:	d105      	bne.n	800029a <__libc_init_array+0x2e>
 800028e:	bd70      	pop	{r4, r5, r6, pc}
 8000290:	f855 3b04 	ldr.w	r3, [r5], #4
 8000294:	4798      	blx	r3
 8000296:	3601      	adds	r6, #1
 8000298:	e7ee      	b.n	8000278 <__libc_init_array+0xc>
 800029a:	f855 3b04 	ldr.w	r3, [r5], #4
 800029e:	4798      	blx	r3
 80002a0:	3601      	adds	r6, #1
 80002a2:	e7f2      	b.n	800028a <__libc_init_array+0x1e>
 80002a4:	080002cc 	.word	0x080002cc
 80002a8:	080002cc 	.word	0x080002cc
 80002ac:	080002cc 	.word	0x080002cc
 80002b0:	080002d0 	.word	0x080002d0

080002b4 <_init>:
 80002b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002b6:	bf00      	nop
 80002b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002ba:	bc08      	pop	{r3}
 80002bc:	469e      	mov	lr, r3
 80002be:	4770      	bx	lr

080002c0 <_fini>:
 80002c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002c2:	bf00      	nop
 80002c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002c6:	bc08      	pop	{r3}
 80002c8:	469e      	mov	lr, r3
 80002ca:	4770      	bx	lr
